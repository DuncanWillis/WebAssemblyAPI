@page "/records"
@inject HttpClient Http

<h1>Sample list of Records</h1>

<p>This component demonstrates fetching JSON data from a local file</p>

@if (string.IsNullOrWhiteSpace(errorString) == false)
{
    <div class="h2">@errorString</div>
}
else if (musicDatabaseRequests == null)
{
    <div class="h4">Loading...</div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Release year</th>
                <th>Artist name</th>
                <th>Album name</th>
                <th>Label</th>
                <th>Available</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var musicDatabaseRequest in musicDatabaseRequests)
            {
                <tr>
                    <td>@musicDatabaseRequest.ReleaseYear</td>
                    <td>@musicDatabaseRequest.ArtistName</td>
                    <td>@musicDatabaseRequest.AlbumName</td>
                    <td>@musicDatabaseRequest.Label</td>
                    <td>@musicDatabaseRequest.Available</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private MusicDatabase[] musicDatabaseRequests;
    string errorString;

    protected override async Task OnInitializedAsync()
    {
        //this is getting the json data from a locally sourced file. If we change the BaseAddress in program.cs we can edit this to make API request

        try
        {
            
            musicDatabaseRequests = await Http.GetFromJsonAsync<MusicDatabase[]>("sample-data/recorddatabase.json");
            errorString = null;
        }
        catch (Exception ex)
        {
            errorString = $"There was an error getting our forecast: {ex.Message}";
        }
        
    }

    public class MusicDatabase
    {
        public int ReleaseYear { get; set; }

        public string ArtistName { get; set; }

        public string AlbumName { get; set; }

        public string Label { get; set; }

        public string Available { get; set; }
    }
}
